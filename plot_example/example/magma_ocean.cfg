# Notes
# -----
# 'set_*' keys are reserved for integer quantites (e.g., flags)
# '*_properties' sections are reserved for lookup quantities

[control]
# logging_level can be debug, info, warning, error, critical
logging_level = debug #info

# files for '_properties' sections must be in this directory
lookup_dir = /Users/dan/Documents/research/themes/magma_ocean/wolf_git/code/data/lookup/lookup-hires-RTmelt/evo

# except for the solidus and liquidus curves which must be in this directory
#lookup_fusion_dir = /Users/dan/Documents/research/themes/magma_ocean/wolf_git/code/data/lookup/lookup-fusion/2011_andrault
lookup_fusion_dir = /Users/dan/Documents/research/themes/magma_ocean/wolf_git/code/data/lookup/lookup-fusion/2011_andrault/RTmelt

# directory for output
out_dir = out

# dimensional output
set_dimensional = 0

[mesh]

# set_mesh:
# 1: read radius points from single column file using:
#     - mesh_dir
#     - mesh_file
# 2: constant mesh spacing using:
#     - core_radius
#     - num_points
# 3: geometric mesh spacing using:
#    dr = dr_min * geom_factor ** [node number]
#     - core_radius
#     - dr_min
#     - dr_max
#     - geom_factor
#     - radius_pin

set_mesh = 2

core_radius = 0.55 # non-dim

# if set_mesh == 1: 
mesh_dir = mesh
mesh_file = refine.dat

# if set_mesh == 2:
num_points = 200

# if set_mesh == 3:
set_top_refine = 0
set_bot_refine = 1
#dr_min = 1.5696123057604772e-09 # 1 cm
#dr_min = 1.5696123057604772e-07 # 1 m
#dr_min = 7.848061528802386e-06 # 50 m
#dr_min = 1.9620153822005963e-05 # 125 m
#dr_min = 3.924030764401193e-05 # 250 m
#dr_min = 7.848061528802385e-05 # 500 m
dr_min = 1.5696123057604772e-10 # 1 mm
#dr_max = 9.810076911002982e-06 # 62.5 m
#dr_max = 1.9620153822005963e-05 # 125 m
#dr_max = 3.924030764401193e-05 # 250 m
#dr_max = 0.0001569612305760477 # 1 km
#dr_max = 7.848061528802385e-05 # 500 m
#dr_max = 0.007848061528802385 # 50 km
#dr_max = 0.001569612305760477 # 10 km
dr_max = 0.0023544184586407153 # 15 km
#dr_max = 0.003139224611520954 # 20 km
#dr_max = 0.0007848061528802385 # 5 km
#dr_max = 0.0023544184586407153 # 15 km
geom_factor = 1.2

set_mid_refine = 0
# as for set_mesh == 3 above and additionally
#radius_pin = 0.7214896489648965
#radius_pin = 0.7215123164693635
#radius_pin = 0.7215118477300896
radius_pin = 0.714
#dr_mid_min = 7.848061528802385e-05 # 500 m
dr_mid_min = 0.0001569612305760477

# set_pressure:
# 1: read radius-pressure relationship from file using:
#     - pressure_dir
#     - pressure_file
# 2: set pressure from Adams-Williamson EOS using:
#    P = 1/beta*rho_s*g*( exp( beta* depth ) - 1 )
#     - rho_s (surface density)
#     - beta (constant)
# 3: set pressure from linearised form:
#    P = rho_s * g * depth
#     - rho_s (surface density)
# 4: set pressure from quadratic fit to PREM
#    P = 4.0074E11 - 91862*rad + 0.0045483*rad**2

set_pressure = 2

# if set_pressure == 1:
pressure_dir = mesh
# 2 column: radius pressure
pressure_file = pressure.dat # Pa

# if set_pressure == 2:
# best fit parameters for the lower mantle
rho_s = 0.8842085571948184 # (dimensional 4078.95095544 kg m^-3)
beta = 0.7081588803940101 # (dimensional 1.1115348931E-7 # 1/m)

# if set_pressure == 3:
#rho_s = 3000.0 # typically same as melt or solid surface density


[initial_condition]

# set_ic:
# 1: linear perturbation using:
#     - ic_entropy
#     - ic_perturbation
# 2: from file using:
#     - ic_entropy
#     - ic_from_file

set_ic = 1

ic_entropy = 0.6

# if set_ic == 1
ic_dSdr = -1.0E-3

# if set_ic == 2
ic_from_file = ic/out_vec.1

[constants]

# non-dimensionalise using these quantities
radius0 = 6371000.0 # m (outer radius of planet)
entropy0 = 2993.025100070677 # J/kg K
temperature0 = 4033.6070755893948 # K
density0 = 4613.109568155063 # kg/m^3

gravity = -10.0 # m/s^2

# radiative surface
emissivity = 1.0 # non-dim
# equilibrium temperature
temp_eqm = 273.0 # K
# parameterised model for temperature drop across ultra-thin thermal
# boundary layer at the top of the magma ocean
# dT = const * [Surf temp] ** exp
# where dT and [Surf temp] are dimensional quantities
const = 1.0E-7 #0.0

#====================================================================
# for all _properties in the following sections
# file input format (space separated):
#   three column: pressure state_function value
#   two column  : pressure value
#   or specify single value
#====================================================================

[solid_properties]
# all dimensional quantities
density = density_solid.dat
dTdPs = adiabat_temp_grad_solid.dat
heat_capacity = heat_capacity_solid.dat
temperature = temperature_solid.dat
thermal_cond = 4.0 # W/mK
thermal_exp = thermal_exp_solid.dat
log10_viscosity = 21.0 # Pas
solidus = solidus.dat

[melt_properties]
# all dimensional quantities
density = density_melt.dat
dTdPs = adiabat_temp_grad_melt.dat
heat_capacity = heat_capacity_melt.dat
temperature = temperature_melt.dat
thermal_cond = 4.0 # W/mK
thermal_exp = thermal_exp_melt.dat
log10_viscosity = 2.0 # Pas
liquidus = liquidus.dat

[mixed_properties]

grain_size = 1.0E-3 # 1 mm

# rheological transition
phi_critical = 0.4
phi_width = 0.15
phi_skew = 0

# smoothing width, non-dim units of melt fraction
# probably mesh-dependent.  A value of 1.0E-2 seems to work
# for num_points= 100 -> 200
swidth = 1.0E-2

# prefactor for thermal eddy diffusivity
thermal_eddy_diff = 1.0

# prefactor for chemical eddy diffusivity 
chemical_eddy_diff = 1.0

[solver]
dtmacro = 10 # integer
# end time step
nstepsmacro = 1000 # integer
# absolute tolerance
atol = 1.0e-11
# relative tolerance
rtol = 1.0e-11
# linear solver
linear_solver = DENSE # SPGMR
# maximum order of method
maxord = 5
# maximum internal steps
maxsteps = 5000
# maximum convergence failures
maxncf = 100
# stability detection
stablimdet = 1
# report continuously
report_continuously = 1
# starting time step
tstart = 0
